"""
API schema definitions using Pydantic.
"""
from pydantic import BaseModel, Field
from typing import List, Dict, Any, Optional


class QueryRequest(BaseModel):
    """Schema for RAG query request."""
    query: str = Field(..., description="The query to ask the RAG system")
    include_sources: bool = Field(False, description="Whether to include source documents in the response")


class SourceDocument(BaseModel):
    """Schema for source document information."""
    content: str = Field(..., description="Content of the document")
    source: Optional[str] = Field(None, description="Source file of the document")
    metadata: Dict[str, Any] = Field(default_factory=dict, description="Metadata of the document")


class QueryResponse(BaseModel):
    """Schema for RAG query response."""
    answer: str = Field(..., description="The answer generated by the RAG system")
    sources: Optional[List[SourceDocument]] = Field(None, description="Source documents used for the answer")


class IngestRequest(BaseModel):
    """Schema for document ingestion request."""
    file_path: str = Field(..., description="Path to the PDF file to ingest")


class IngestResponse(BaseModel):
    """Schema for document ingestion response."""
    success: bool = Field(..., description="Whether the ingestion was successful")
    message: str = Field(..., description="Message describing the result of the ingestion")
    document_chunks: Optional[int] = Field(None, description="Number of document chunks processed") 